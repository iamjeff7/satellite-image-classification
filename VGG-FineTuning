{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"VGG-FineTuning","provenance":[{"file_id":"1weYZUfj5qbo9yIEUWKc23qYX9Vjf6kpj","timestamp":1570425489884}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"WZn3xCRTTs8P","colab_type":"code","outputId":"bc715b02-a154-4257-e209-2217d94cfedd","executionInfo":{"status":"ok","timestamp":1570431628829,"user_tz":-480,"elapsed":3219,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":33}},"source":["from google.colab import drive\n","drive.mount('/content/gdrive/')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Mounted at /content/gdrive/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"m-SA6LhHrcnm","colab_type":"code","outputId":"9dd5f146-fdbc-4bd0-939e-76b4894d203d","executionInfo":{"status":"ok","timestamp":1570431638483,"user_tz":-480,"elapsed":12864,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"source":["!unzip -q '/content/gdrive/My Drive/Colab Notebooks/vip2/NWPUvip.zip'\n","from keras.applications import VGG16\n","from keras import models\n","from keras import layers\n","from keras import optimizers\n","from keras.preprocessing.image import ImageDataGenerator, load_img"],"execution_count":3,"outputs":[{"output_type":"stream","text":["replace NWPU-RESISC12/test/beach/beach_551.jpg? [y]es, [n]o, [A]ll, [N]one, [r]ename: A\n"],"name":"stdout"},{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"Ls5WGgJNrer9","colab_type":"code","colab":{}},"source":["train_dir = '/content/NWPU-RESISC12/train'\n","validation_dir = '/content/NWPU-RESISC12/test'\n","image_size = 224\n","nTrain = 6600\n","nVal = 1800"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"X-L80zu2rj7i","colab_type":"code","outputId":"f30c2951-743f-44d4-bd05-653d000359b1","executionInfo":{"status":"ok","timestamp":1570431640478,"user_tz":-480,"elapsed":14843,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":555}},"source":["#Load the VGG model\n","vgg_conv = VGG16(weights='imagenet', include_top=False, input_shape=(image_size, image_size, 3))\n","\n","# Freeze all layers except the last 4 layers\n","for layer in vgg_conv.layers[:-4]:\n","    layer.trainable = False\n","\n","# Check the trainable status of the individual layers\n","for layer in vgg_conv.layers:\n","    print(layer, layer.trainable)"],"execution_count":5,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","<keras.engine.input_layer.InputLayer object at 0x7ff69a997518> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a997710> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a997898> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7ff69a9c1b38> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a9c1320> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a16fa90> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7ff69a188ba8> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a188208> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a1336d8> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a14e9b0> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7ff69a0e4fd0> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a0e4780> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a114ac8> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a0abd30> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7ff69a0bfac8> False\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a0bff28> True\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a071e48> True\n","<keras.layers.convolutional.Conv2D object at 0x7ff69a0866a0> True\n","<keras.layers.pooling.MaxPooling2D object at 0x7ff69a01ec18> True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Tk_EsJC6U7RM","colab_type":"code","outputId":"f2287c28-8d5a-4bc5-8f1d-7e317b7cf49a","executionInfo":{"status":"ok","timestamp":1570431640480,"user_tz":-480,"elapsed":14838,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":388}},"source":["# Create the model\n","model = models.Sequential()\n","\n","# Add the vgg convolutional base model\n","model.add(vgg_conv)\n","\n","# Add new layers\n","model.add(layers.Flatten())\n","model.add(layers.Dense(1024, activation='relu'))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.Dense(12, activation='softmax'))\n","\n","# Show a summary of the model. Check the number of trainable parameters\n","model.summary()"],"execution_count":6,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","vgg16 (Model)                (None, 7, 7, 512)         14714688  \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 25088)             0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 1024)              25691136  \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 1024)              0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 12)                12300     \n","=================================================================\n","Total params: 40,418,124\n","Trainable params: 32,782,860\n","Non-trainable params: 7,635,264\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"i9KvMfbHVaCh","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"t1ezr0mUVSax","colab_type":"code","outputId":"fc788a2c-4f6b-46fc-bf8d-e37568302147","executionInfo":{"status":"ok","timestamp":1570433548968,"user_tz":-480,"elapsed":1682862,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"source":["# No Data augmentation \n","train_datagen = ImageDataGenerator(rescale=1./255)\n","validation_datagen = ImageDataGenerator(rescale=1./255)\n","\n","# Change the batchsize according to your system RAM\n","train_batchsize = 100\n","val_batchsize = 10\n","\n","# Data Generator for Training data\n","train_generator = train_datagen.flow_from_directory(\n","        train_dir,\n","        target_size=(image_size, image_size),\n","        batch_size=train_batchsize,\n","        class_mode='categorical',\n","        shuffle=True)\n","\n","# Data Generator for Validation data\n","validation_generator = validation_datagen.flow_from_directory(\n","        validation_dir,\n","        target_size=(image_size, image_size),\n","        batch_size=val_batchsize,\n","        class_mode='categorical',\n","        shuffle=False)\n"],"execution_count":10,"outputs":[{"output_type":"stream","text":["Found 6600 images belonging to 12 classes.\n","Found 1800 images belonging to 12 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_DbKSTJsr_Xi","colab_type":"code","outputId":"65043d17-1a86-436a-a950-d6421e8fec8d","colab":{"base_uri":"https://localhost:8080/","height":789},"executionInfo":{"status":"ok","timestamp":1570433548966,"user_tz":-480,"elapsed":1855230,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["# Compile the model\n","model.compile(loss='categorical_crossentropy',\n","              optimizer=optimizers.RMSprop(lr=1e-4),\n","              metrics=['acc'])\n","\n","# Train the Model\n","history = model.fit_generator(\n","      train_generator,\n","      steps_per_epoch=train_generator.samples/train_generator.batch_size ,\n","      epochs=20,\n","      validation_data=validation_generator,\n","      validation_steps=validation_generator.samples/validation_generator.batch_size,\n","      verbose=1)\n","\n","# Save the Model\n","model.save('/content/gdrive/My Drive/Colab Notebooks/vip2/VGG-FineTune.h5')\n","\n","                                                                                                                                                                                                                                         "],"execution_count":9,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","Epoch 1/20\n","66/66 [==============================] - 104s 2s/step - loss: 1.2805 - acc: 0.5748 - val_loss: 0.7537 - val_acc: 0.7311\n","Epoch 2/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.5960 - acc: 0.8055 - val_loss: 0.5037 - val_acc: 0.8400\n","Epoch 3/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.4059 - acc: 0.8603 - val_loss: 0.3922 - val_acc: 0.8728\n","Epoch 4/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.2666 - acc: 0.9097 - val_loss: 0.4158 - val_acc: 0.8711\n","Epoch 5/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.2060 - acc: 0.9298 - val_loss: 0.4595 - val_acc: 0.8822\n","Epoch 6/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.1440 - acc: 0.9502 - val_loss: 0.4112 - val_acc: 0.8933\n","Epoch 7/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.1154 - acc: 0.9655 - val_loss: 0.3739 - val_acc: 0.9033\n","Epoch 8/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.1011 - acc: 0.9702 - val_loss: 0.3920 - val_acc: 0.9050\n","Epoch 9/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0873 - acc: 0.9758 - val_loss: 0.3855 - val_acc: 0.9022\n","Epoch 10/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0783 - acc: 0.9803 - val_loss: 0.5200 - val_acc: 0.8883\n","Epoch 11/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0567 - acc: 0.9847 - val_loss: 0.8020 - val_acc: 0.8556\n","Epoch 12/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0660 - acc: 0.9824 - val_loss: 0.5213 - val_acc: 0.8917\n","Epoch 13/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0684 - acc: 0.9842 - val_loss: 0.7703 - val_acc: 0.8633\n","Epoch 14/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0742 - acc: 0.9838 - val_loss: 0.5382 - val_acc: 0.9106\n","Epoch 15/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0576 - acc: 0.9885 - val_loss: 0.5864 - val_acc: 0.8889\n","Epoch 16/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0373 - acc: 0.9897 - val_loss: 1.0830 - val_acc: 0.8489\n","Epoch 17/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0414 - acc: 0.9883 - val_loss: 0.6239 - val_acc: 0.8883\n","Epoch 18/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0345 - acc: 0.9918 - val_loss: 0.5061 - val_acc: 0.9011\n","Epoch 19/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0645 - acc: 0.9894 - val_loss: 0.5206 - val_acc: 0.8906\n","Epoch 20/20\n","66/66 [==============================] - 92s 1s/step - loss: 0.0263 - acc: 0.9936 - val_loss: 0.7675 - val_acc: 0.8861\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6rVdhTUJsRBG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":545},"outputId":"e4a34e78-2c6f-44b3-ef23-cd9f79bc0510","executionInfo":{"status":"ok","timestamp":1570433549907,"user_tz":-480,"elapsed":1666595,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["import matplotlib.pyplot as plt\n","# Plot the accuracy and loss curves\n","acc = history.history['acc']\n","val_acc = history.history['val_acc']\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","epochs = range(len(acc))\n","\n","plt.plot(epochs, acc, 'b', label='Training acc')\n","plt.plot(epochs, val_acc, 'r', label='Validation acc')\n","plt.title('Training and validation accuracy')\n","plt.legend()\n","\n","plt.figure()\n","\n","plt.plot(epochs, loss, 'b', label='Training loss')\n","plt.plot(epochs, val_loss, 'r', label='Validation loss')\n","plt.title('Training and validation loss')\n","plt.legend()\n","\n","plt.show()"],"execution_count":11,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"L7B8E_c8sUlG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":104},"outputId":"5389ed71-9ff0-47f7-c551-8bd953520526","executionInfo":{"status":"ok","timestamp":1570433573254,"user_tz":-480,"elapsed":1688095,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["import numpy as np\n","# Create a generator for prediction\n","validation_generator = validation_datagen.flow_from_directory(\n","        validation_dir,\n","        target_size=(image_size, image_size),\n","        batch_size=val_batchsize,\n","        class_mode='categorical',\n","        shuffle=False)\n","\n","# Get the filenames from the generator\n","fnames = validation_generator.filenames\n","\n","# Get the ground truth from generator\n","ground_truth = validation_generator.classes\n","\n","# Get the label to class mapping from the generator\n","label2index = validation_generator.class_indices\n","\n","# Getting the mapping from class index to class label\n","idx2label = dict((v,k) for k,v in label2index.items())\n","\n","# Get the predictions from the model using the generator\n","predictions = model.predict_generator(validation_generator, steps=validation_generator.samples/validation_generator.batch_size,verbose=1)\n","predicted_classes = np.argmax(predictions,axis=1)\n","\n","errors = np.where(predicted_classes != ground_truth)[0]\n","print(\"No of errors = {}/{}\".format(len(errors),validation_generator.samples))\n","\n","'''\n","# Show the errors\n","for i in range(len(errors)):\n","    pred_class = np.argmax(predictions[errors[i]])\n","    pred_label = idx2label[pred_class]\n","    \n","    title = 'Original label:{}, Prediction :{}, confidence : {:.3f}'.format(\n","        fnames[errors[i]].split('/')[0],\n","        pred_label,\n","        predictions[errors[i]][pred_class])\n","    \n","    original = load_img('{}/{}'.format(validation_dir,fnames[errors[i]]))\n","    plt.figure(figsize=[7,7])\n","    plt.axis('off')\n","    plt.title(title)\n","    plt.imshow(original)\n","    plt.show()\n","'''"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Found 1800 images belonging to 12 classes.\n","180/180 [==============================] - 24s 133ms/step\n","No of errors = 205/1800\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["\"\\n# Show the errors\\nfor i in range(len(errors)):\\n    pred_class = np.argmax(predictions[errors[i]])\\n    pred_label = idx2label[pred_class]\\n    \\n    title = 'Original label:{}, Prediction :{}, confidence : {:.3f}'.format(\\n        fnames[errors[i]].split('/')[0],\\n        pred_label,\\n        predictions[errors[i]][pred_class])\\n    \\n    original = load_img('{}/{}'.format(validation_dir,fnames[errors[i]]))\\n    plt.figure(figsize=[7,7])\\n    plt.axis('off')\\n    plt.title(title)\\n    plt.imshow(original)\\n    plt.show()\\n\""]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"E61pgPxz959H","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"outputId":"13ae9405-9807-4dfd-b927-1eab6023c085","executionInfo":{"status":"ok","timestamp":1570433573255,"user_tz":-480,"elapsed":1096599,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["print(predicted_classes)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["[ 0  0  0 ...  0 11 11]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"DAP3uEfnEmmW","colab":{"base_uri":"https://localhost:8080/","height":217},"outputId":"7716e364-0467-4138-bda7-2e216cf209aa","executionInfo":{"status":"ok","timestamp":1570433574483,"user_tz":-480,"elapsed":1052481,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["from sklearn.metrics import confusion_matrix\n","confusion_matrix(ground_truth, predicted_classes, labels=None, sample_weight=None)"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[141,   0,   3,   0,   0,   0,   4,   0,   1,   0,   0,   1],\n","       [  1, 141,   0,   0,   0,   5,   0,   0,   1,   2,   0,   0],\n","       [  3,   0, 110,   1,   1,   0,   0,   0,  27,   1,   0,   7],\n","       [  0,   0,   0, 141,   0,   0,   1,   1,   2,   2,   2,   1],\n","       [  0,   0,   0,   0, 146,   0,   0,   0,   3,   1,   0,   0],\n","       [  0,   2,   0,   0,   0, 147,   0,   0,   0,   0,   1,   0],\n","       [  5,   0,   0,   0,   0,   0, 136,   1,   1,   0,   4,   3],\n","       [  1,   0,   0,   1,   0,   1,   0, 130,   1,   0,   1,  15],\n","       [  0,   0,   3,   0,   3,   0,   0,   0, 143,   0,   0,   1],\n","       [  1,   0,   1,   1,   7,   2,   2,   0,   0, 135,   1,   0],\n","       [  3,   0,   0,   5,   2,   2,   0,   4,  20,   1, 109,   4],\n","       [  2,   0,   0,   0,  14,   0,   1,   7,   7,   0,   3, 116]])"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"daGu2t3dEo6I","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"outputId":"7d7e8ea1-b757-420e-b7f8-1ef97a2aacdc","executionInfo":{"status":"ok","timestamp":1570435808715,"user_tz":-480,"elapsed":1147,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["from sklearn.metrics import precision_score,recall_score,f1_score,accuracy_score\n","precision_score(ground_truth, predicted_classes,average='macro')"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8944869797956404"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"vnQdjKuHITxS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"outputId":"749182f7-bee8-4ee3-e0aa-150acae19d18","executionInfo":{"status":"ok","timestamp":1570435817878,"user_tz":-480,"elapsed":1134,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["recall_score(ground_truth, predicted_classes,average='macro')"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8861111111111111"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"0XR0g8tvIhuI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"outputId":"fd56ac1f-d08f-4471-be49-3b886d6f0090","executionInfo":{"status":"ok","timestamp":1570435821149,"user_tz":-480,"elapsed":1172,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["f1_score(ground_truth, predicted_classes,average='macro')"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8861116159062675"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"rgRoqsMMNOvl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"outputId":"fb9f0d80-773d-4662-fe8c-32ade938453e","executionInfo":{"status":"ok","timestamp":1570435822749,"user_tz":-480,"elapsed":661,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["accuracy_score(ground_truth, predicted_classes)"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8861111111111111"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"ToN830Jj96O9","colab_type":"text"},"source":[""]}]}