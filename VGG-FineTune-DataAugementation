{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"VGG-FineTune-DataAugementation","provenance":[{"file_id":"1C27ARNphPBmsaGZQN8WfzAF61y-OdRIu","timestamp":1570427463184},{"file_id":"1weYZUfj5qbo9yIEUWKc23qYX9Vjf6kpj","timestamp":1570425489884}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"WZn3xCRTTs8P","colab_type":"code","outputId":"c6433240-c5f4-4706-e1d5-af868abd7e51","executionInfo":{"status":"ok","timestamp":1570526226345,"user_tz":-480,"elapsed":49895,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":120}},"source":["from google.colab import drive\n","drive.mount('/content/gdrive/')"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"m-SA6LhHrcnm","colab_type":"code","colab":{}},"source":["!unzip -q '/content/gdrive/My Drive/Colab Notebooks/vip2/NWPUvip.zip'\n","from keras.applications import VGG16\n","from keras import models\n","from keras import layers\n","from keras import optimizers\n","from keras.preprocessing.image import ImageDataGenerator, load_img\n","#from keras.preprocessing.image import ImageDataGenerator, load_img"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ls5WGgJNrer9","colab_type":"code","colab":{}},"source":["train_dir = '/content/NWPU-RESISC12/train'\n","validation_dir = '/content/NWPU-RESISC12/test'\n","image_size = 224\n","nTrain = 6600\n","nVal = 1800"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"X-L80zu2rj7i","colab_type":"code","outputId":"b6c1a427-5a36-45fa-8a14-621e28a48b96","executionInfo":{"status":"ok","timestamp":1570525945261,"user_tz":-480,"elapsed":79060,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":589}},"source":["#Load the VGG model\n","vgg_conv = VGG16(weights='imagenet', include_top=False, input_shape=(image_size, image_size, 3))\n","\n","# Freeze all layers except the last 4 layers\n","for layer in vgg_conv.layers[:-4]:\n","    layer.trainable = False\n","\n","# Check the trainable status of the individual layers\n","for layer in vgg_conv.layers:\n","    print(layer, layer.trainable)"],"execution_count":8,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n","\n","Downloading data from https://github.com/fchollet/deep-learning-models/releases/download/v0.1/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n","58892288/58889256 [==============================] - 6s 0us/step\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","<keras.engine.input_layer.InputLayer object at 0x7f20daa59f98> False\n","<keras.layers.convolutional.Conv2D object at 0x7f211a13c080> False\n","<keras.layers.convolutional.Conv2D object at 0x7f21184a55f8> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7f20daa016a0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20daa013c8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da1b7c50> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7f20da1ce5c0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da1ce4a8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da1785c0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da191d68> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7f20da1a4a90> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da1a4a58> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da158198> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da0ec9e8> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7f20da103e48> False\n","<keras.layers.convolutional.Conv2D object at 0x7f20da11ddd8> True\n","<keras.layers.convolutional.Conv2D object at 0x7f20da0ca320> True\n","<keras.layers.convolutional.Conv2D object at 0x7f20da0cabe0> True\n","<keras.layers.pooling.MaxPooling2D object at 0x7f20da079be0> True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Tk_EsJC6U7RM","colab_type":"code","outputId":"e832a883-5433-4a85-895e-fc78a5f48051","executionInfo":{"status":"ok","timestamp":1570525945262,"user_tz":-480,"elapsed":79053,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":388}},"source":["# Create the model\n","model = models.Sequential()\n","\n","# Add the vgg convolutional base model\n","model.add(vgg_conv)\n","\n","# Add new layers\n","model.add(layers.Flatten())\n","model.add(layers.Dense(1024, activation='relu'))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.Dense(12, activation='softmax'))\n","\n","# Show a summary of the model. Check the number of trainable parameters\n","model.summary()"],"execution_count":9,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","vgg16 (Model)                (None, 7, 7, 512)         14714688  \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 25088)             0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 1024)              25691136  \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 1024)              0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 12)                12300     \n","=================================================================\n","Total params: 40,418,124\n","Trainable params: 32,782,860\n","Non-trainable params: 7,635,264\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"i9KvMfbHVaCh","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"t1ezr0mUVSax","colab_type":"code","outputId":"19a553e6-4396-407f-ee8d-8949bb5626d9","executionInfo":{"status":"ok","timestamp":1570526478232,"user_tz":-480,"elapsed":1166,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"source":["# Specify the data augmentation techniques in the trainig image data generator\n","train_datagen = ImageDataGenerator(\n","      rescale=1./255,\n","      rotation_range=20,\n","      width_shift_range=0.2,\n","      height_shift_range=0.2,\n","      horizontal_flip=True,\n","      fill_mode='nearest')\n","\n","validation_datagen = ImageDataGenerator(rescale=1./255)\n","\n","# Change the batchsize according to your system RAM\n","train_batchsize = 50\n","val_batchsize = 10\n","\n","# Data Generator for Training data\n","train_generator = train_datagen.flow_from_directory(\n","        train_dir,\n","        target_size=(image_size, image_size),\n","        batch_size=train_batchsize,\n","        class_mode='categorical',\n","        shuffle=True)\n","\n","# Data Generator for Validation data\n","validation_generator = validation_datagen.flow_from_directory(\n","        validation_dir,\n","        target_size=(image_size, image_size),\n","        batch_size=val_batchsize,\n","        class_mode='categorical',\n","        shuffle=False)\n","\n"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Found 6600 images belonging to 12 classes.\n","Found 1800 images belonging to 12 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VqS-t8lpq8ce","colab_type":"code","colab":{}},"source":["# Compile the model\n","model.compile(loss='categorical_crossentropy',\n","              optimizer=optimizers.RMSprop(lr=1e-4),\n","              metrics=['acc'])\n","\n","# Train the Model\n","# NOTE that we have multiplied the steps_per_epoch by 2. This is because we are using data augmentation.\n","history = model.fit_generator(\n","      train_generator,\n","      steps_per_epoch=2*train_generator.samples/train_generator.batch_size ,\n","      epochs=40,\n","      validation_data=validation_generator,\n","      validation_steps=validation_generator.samples/validation_generator.batch_size,\n","      verbose=1)\n","\n","# Save the Model\n","model.save('/content/gdrive/My Drive/Colab Notebooks/vip2/VGG-FineTune-DA.h5')\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6MFBZey0ppbl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":371},"outputId":"e0f38db9-d531-4e85-dfc7-ff36e24204e3","executionInfo":{"status":"ok","timestamp":1570526246200,"user_tz":-480,"elapsed":11103,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["# Save the Model\n","from keras.models import load_model\n","model=load_model('/content/gdrive/My Drive/Colab Notebooks/vip2/VGG-FineTune-DA.h5')"],"execution_count":4,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:148: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6rVdhTUJsRBG","colab_type":"code","outputId":"29f908f2-4ecc-40bc-835c-24f19146cb17","executionInfo":{"status":"error","timestamp":1570526250989,"user_tz":-480,"elapsed":1186,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":229}},"source":["import matplotlib.pyplot as plt\n","# Plot the accuracy and loss curves\n","acc = history.history['acc']\n","val_acc = history.history['val_acc']\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","epochs = range(len(acc))\n","\n","plt.plot(epochs, acc, 'b', label='Training acc')\n","plt.plot(epochs, val_acc, 'r', label='Validation acc')\n","plt.title('Training and validation accuracy')\n","plt.legend()\n","\n","plt.figure()\n","\n","plt.plot(epochs, loss, 'b', label='Training loss')\n","plt.plot(epochs, val_loss, 'r', label='Validation loss')\n","plt.title('Training and validation loss')\n","plt.legend()\n","\n","plt.show()"],"execution_count":5,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-44d9d24379ce>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# Plot the accuracy and loss curves\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0macc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'acc'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mval_acc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_acc'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'loss'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'history' is not defined"]}]},{"cell_type":"code","metadata":{"id":"L7B8E_c8sUlG","colab_type":"code","outputId":"ddadf04e-b39b-4e66-8043-4dba8105b6c8","executionInfo":{"status":"ok","timestamp":1570526811092,"user_tz":-480,"elapsed":25457,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"source":["import numpy as np\n","# Create a generator for prediction\n","validation_generator = validation_datagen.flow_from_directory(\n","        validation_dir,\n","        target_size=(image_size, image_size),\n","        batch_size=val_batchsize,\n","        class_mode='categorical',\n","        shuffle=False)\n","\n","# Get the filenames from the generator\n","fnames = validation_generator.filenames\n","\n","# Get the ground truth from generator\n","ground_truth = validation_generator.classes\n","\n","# Get the label to class mapping from the generator\n","label2index = validation_generator.class_indices\n","\n","# Getting the mapping from class index to class label\n","idx2label = dict((v,k) for k,v in label2index.items())\n","\n","# Get the predictions from the model using the generator\n","predictions = model.predict_generator(validation_generator, steps=validation_generator.samples/validation_generator.batch_size,verbose=1)\n","predicted_classes = np.argmax(predictions,axis=1)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["Found 1800 images belonging to 12 classes.\n","180/180 [==============================] - 24s 133ms/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"28PLRvEjzk23","colab_type":"code","colab":{}},"source":["errors = np.where(predicted_classes != ground_truth)[0]\n","print(\"No of errors = {}/{}\".format(len(errors),validation_generator.samples))\n","\n","# # Show the errors\n","# for i in range(len(errors)):\n","#     pred_class = np.argmax(predictions[errors[i]])\n","#     pred_label = idx2label[pred_class]\n","    \n","#     title = 'Original label:{}, Prediction :{}, confidence : {:.3f}'.format(\n","#         fnames[errors[i]].split('/')[0],\n","#         pred_label,\n","#         predictions[errors[i]][pred_class])\n","    \n","#     original = load_img('{}/{}'.format(validation_dir,fnames[errors[i]]))\n","#     plt.figure(figsize=[7,7])\n","#     plt.axis('off')\n","#     plt.title(title)\n","#     plt.imshow(original)\n","#     plt.show()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jggA25zFldg9","colab_type":"code","colab":{}},"source":["import numpy as np\n","\n","predictions=model.predict(validation_generator)\n","predicted_classes=np.argmax(predictions, axis=1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gPkSs6clNlS9","colab_type":"code","colab":{}},"source":["from sklearn.metrics import confusion_matrix,precision_score,recall_score,f1_score,accuracy_score,f1_score"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3Dp6PrKfNsAt","colab_type":"code","outputId":"fe4a398e-05c2-4d2d-c96d-0470b8bc80bb","executionInfo":{"status":"ok","timestamp":1570527848368,"user_tz":-480,"elapsed":1481,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":217}},"source":["#labels=['beach','commercial_area','desert','farmland','forest','industrial_area','island','lake','mountain','residential','river','wetland']\n","confusion_matrix(ground_truth, predicted_classes, labels=None, sample_weight=None)"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[123,   3,  14,   0,   0,   0,   2,   2,   1,   0,   1,   4],\n","       [  0, 127,   0,   0,   0,  13,   0,   0,   0,  10,   0,   0],\n","       [  0,   0, 141,   0,   0,   0,   0,   0,   6,   1,   1,   1],\n","       [  0,   0,   0, 147,   0,   0,   0,   0,   0,   3,   0,   0],\n","       [  0,   0,   0,   0, 149,   0,   0,   0,   0,   1,   0,   0],\n","       [  0,   0,   0,   0,   0, 145,   0,   0,   0,   4,   1,   0],\n","       [  2,   0,   1,   0,   0,   0, 138,   0,   0,   0,   4,   5],\n","       [  0,   0,   1,   0,   0,   0,   0, 132,   0,   1,   2,  14],\n","       [  0,   0,  12,   0,   2,   0,   0,   0, 132,   0,   2,   2],\n","       [  0,   0,   1,   1,   4,   1,   0,   0,   0, 140,   0,   3],\n","       [  0,   1,   0,   5,   1,   3,   0,   4,   2,   1, 128,   5],\n","       [  2,   0,   0,   0,   5,   0,   0,   5,   2,   0,   1, 135]])"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"KMsNBQQjNufm","colab_type":"code","outputId":"3a372f4d-faed-4245-d3b3-0c6b89d4c38a","executionInfo":{"status":"ok","timestamp":1570526824543,"user_tz":-480,"elapsed":1128,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":33}},"source":["precision_score(ground_truth, predicted_classes,average='macro')"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9136024052325896"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"oWVjxsk4Rnlj","colab_type":"code","outputId":"1a9d154e-a5bd-423f-a059-09478649cfd8","executionInfo":{"status":"ok","timestamp":1570526827383,"user_tz":-480,"elapsed":1160,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":33}},"source":["recall_score(ground_truth, predicted_classes,average='macro')"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9094444444444445"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"jfPALMFIRpDf","colab_type":"code","outputId":"e7630dec-38ae-406c-f289-300072cb2eac","executionInfo":{"status":"ok","timestamp":1570526828485,"user_tz":-480,"elapsed":1072,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":33}},"source":["accuracy_score(ground_truth, predicted_classes)"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9094444444444445"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"AWX5EhknkyjW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"outputId":"0093f4fe-730e-4052-f296-5370163a7260","executionInfo":{"status":"ok","timestamp":1570526832326,"user_tz":-480,"elapsed":1164,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["f1_score(ground_truth, predicted_classes,average='macro')"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9095401556145813"]},"metadata":{"tags":[]},"execution_count":23}]}]}