{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ResNet_FullyConnected","provenance":[{"file_id":"1weYZUfj5qbo9yIEUWKc23qYX9Vjf6kpj","timestamp":1570417770584}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"WZn3xCRTTs8P","colab_type":"code","outputId":"a0909d95-55d0-4bf5-b7eb-576834852d8b","executionInfo":{"status":"ok","timestamp":1570438057661,"user_tz":-480,"elapsed":22198,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":120}},"source":["from google.colab import drive\n","drive.mount('/content/gdrive/')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Tk_EsJC6U7RM","colab_type":"code","outputId":"e9854f1f-b69b-4510-845a-d51b09a03824","executionInfo":{"status":"error","timestamp":1570453426793,"user_tz":-480,"elapsed":11112,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":641}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","from __future__ import print_function\n","\n","from keras.applications.resnet50 import ResNet50\n","from keras.utils import to_categorical\n","from keras.preprocessing.image import ImageDataGenerator, load_img\n","import keras\n","\n","\n","res_conv = ResNet50(weights='imagenet',\n","                  include_top=False,\n","                  input_shape=(224, 224, 3))\n","\n","res_conv.summary()"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"},{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4479: The name tf.truncated_normal is deprecated. Please use tf.random.truncated_normal instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:2041: The name tf.nn.fused_batch_norm is deprecated. Please use tf.compat.v1.nn.fused_batch_norm instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n","\n"],"name":"stdout"},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-b1440eb9c306>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m res_conv = ResNet50(weights='imagenet',\n\u001b[1;32m     13\u001b[0m                   \u001b[0minclude_top\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m                   input_shape=(224, 224, 3))\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0mres_conv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msummary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/applications/__init__.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     18\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'models'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodels\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'utils'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mutils\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 20\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mbase_fun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/applications/resnet50.py\u001b[0m in \u001b[0;36mResNet50\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m@\u001b[0m\u001b[0mkeras_modules_injection\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mResNet50\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mresnet50\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mResNet50\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras_applications/resnet50.py\u001b[0m in \u001b[0;36mResNet50\u001b[0;34m(include_top, weights, input_tensor, input_shape, pooling, classes, **kwargs)\u001b[0m\n\u001b[1;32m    250\u001b[0m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0midentity_block\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m256\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1024\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstage\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mblock\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'f'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    251\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 252\u001b[0;31m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconv_block\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m512\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m512\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2048\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstage\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mblock\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'a'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    253\u001b[0m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0midentity_block\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m512\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m512\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2048\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstage\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mblock\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'b'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0midentity_block\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m512\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m512\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2048\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstage\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mblock\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'c'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras_applications/resnet50.py\u001b[0m in \u001b[0;36mconv_block\u001b[0;34m(input_tensor, kernel_size, filters, stage, block, strides)\u001b[0m\n\u001b[1;32m    115\u001b[0m                       \u001b[0mkernel_initializer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'he_normal'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    116\u001b[0m                       name=conv_name_base + '2a')(input_tensor)\n\u001b[0;32m--> 117\u001b[0;31m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlayers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mBatchNormalization\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbn_axis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbn_name_base\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'2a'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    118\u001b[0m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlayers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mActivation\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    119\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, inputs, **kwargs)\u001b[0m\n\u001b[1;32m    423\u001b[0m                                          \u001b[0;34m'You can build it manually via: '\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    424\u001b[0m                                          '`layer.build(batch_input_shape)`')\n\u001b[0;32m--> 425\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuild\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0munpack_singleton\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput_shapes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    426\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuilt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    427\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/layers/normalization.py\u001b[0m in \u001b[0;36mbuild\u001b[0;34m(self, input_shape)\u001b[0m\n\u001b[1;32m    127\u001b[0m             \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'moving_variance'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    128\u001b[0m             \u001b[0minitializer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmoving_variance_initializer\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 129\u001b[0;31m             trainable=False)\n\u001b[0m\u001b[1;32m    130\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuilt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    131\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/legacy/interfaces.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     89\u001b[0m                 warnings.warn('Update your `' + object_name + '` call to the ' +\n\u001b[1;32m     90\u001b[0m                               'Keras 2 API: ' + signature, stacklevel=2)\n\u001b[0;32m---> 91\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     92\u001b[0m         \u001b[0mwrapper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_function\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py\u001b[0m in \u001b[0;36madd_weight\u001b[0;34m(self, name, shape, dtype, initializer, regularizer, trainable, constraint)\u001b[0m\n\u001b[1;32m    244\u001b[0m                             \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    245\u001b[0m                             \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 246\u001b[0;31m                             constraint=constraint)\n\u001b[0m\u001b[1;32m    247\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mregularizer\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    248\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mK\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname_scope\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'weight_regularizer'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py\u001b[0m in \u001b[0;36mvariable\u001b[0;34m(value, dtype, name, constraint)\u001b[0m\n\u001b[1;32m    420\u001b[0m         \u001b[0mv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_uses_learning_phase\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    421\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mv\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 422\u001b[0;31m     \u001b[0mv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mVariable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    423\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    424\u001b[0m         \u001b[0mv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_keras_shape\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(cls, *args, **kwargs)\u001b[0m\n\u001b[1;32m    257\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    258\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mVariableV1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 259\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_v1_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    260\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mVariable\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    261\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_v2_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\u001b[0m in \u001b[0;36m_variable_v1_call\u001b[0;34m(cls, initial_value, trainable, collections, validate_shape, caching_device, name, variable_def, dtype, expected_shape, import_scope, constraint, use_resource, synchronization, aggregation, shape)\u001b[0m\n\u001b[1;32m    218\u001b[0m         \u001b[0msynchronization\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msynchronization\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m         \u001b[0maggregation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maggregation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 220\u001b[0;31m         shape=shape)\n\u001b[0m\u001b[1;32m    221\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    222\u001b[0m   def _variable_v2_call(cls,\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(**kwargs)\u001b[0m\n\u001b[1;32m    196\u001b[0m                         shape=None):\n\u001b[1;32m    197\u001b[0m     \u001b[0;34m\"\"\"Call on Variable class. Useful to force the signature.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 198\u001b[0;31m     \u001b[0mprevious_getter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mdefault_variable_creator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    199\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgetter\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_default_graph\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_creator_stack\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    200\u001b[0m       \u001b[0mprevious_getter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_make_getter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgetter\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprevious_getter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\u001b[0m in \u001b[0;36mdefault_variable_creator\u001b[0;34m(next_creator, **kwargs)\u001b[0m\n\u001b[1;32m   2509\u001b[0m         \u001b[0msynchronization\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msynchronization\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2510\u001b[0m         \u001b[0maggregation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maggregation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2511\u001b[0;31m         shape=shape)\n\u001b[0m\u001b[1;32m   2512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2513\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(cls, *args, **kwargs)\u001b[0m\n\u001b[1;32m    261\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable_v2_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    262\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 263\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mVariableMetaclass\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    264\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    265\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, initial_value, trainable, collections, validate_shape, caching_device, name, variable_def, dtype, expected_shape, import_scope, constraint, synchronization, aggregation, shape)\u001b[0m\n\u001b[1;32m   1566\u001b[0m           \u001b[0msynchronization\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msynchronization\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1567\u001b[0m           \u001b[0maggregation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maggregation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1568\u001b[0;31m           shape=shape)\n\u001b[0m\u001b[1;32m   1569\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1570\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m__repr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\u001b[0m in \u001b[0;36m_init_from_args\u001b[0;34m(self, initial_value, trainable, collections, validate_shape, caching_device, name, dtype, expected_shape, constraint, synchronization, aggregation, shape)\u001b[0m\n\u001b[1;32m   1682\u001b[0m             \"RefVariable not supported when eager execution is enabled. \")\n\u001b[1;32m   1683\u001b[0m       with ops.name_scope(name, \"Variable\", [] if init_from_fn else\n\u001b[0;32m-> 1684\u001b[0;31m                           [initial_value]) as name:\n\u001b[0m\u001b[1;32m   1685\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1686\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minit_from_fn\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36m__enter__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   6511\u001b[0m       \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6512\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_name_scope\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname_scope\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6513\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_name_scope\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__enter__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6514\u001b[0m       \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6515\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_g_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__exit__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexc_info\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.6/contextlib.py\u001b[0m in \u001b[0;36m__enter__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     79\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__enter__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgen\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mRuntimeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"generator didn't yield\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36mname_scope\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   4320\u001b[0m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_name_stack\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_stack\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4321\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4322\u001b[0;31m       \u001b[0;32myield\u001b[0m \u001b[0;34m\"\"\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mnew_stack\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mnew_stack\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\"/\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4323\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4324\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_name_stack\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mold_stack\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","metadata":{"id":"i9KvMfbHVaCh","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"t1ezr0mUVSax","colab_type":"code","colab":{}},"source":["!unzip -q '/content/gdrive/My Drive/Colab Notebooks/vip2/NWPUvip.zip'"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9CFeywlwNbH8","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"6BbtrNKaVgns","colab_type":"code","colab":{}},"source":["train_dir = '/content/NWPU-RESISC12/train'\n","validation_dir = '/content/NWPU-RESISC12/test'\n","image_size = 224\n","nTrain = 6600\n","nVal = 1800"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6xvih0mJVqIM","colab_type":"code","outputId":"e0d06ed1-1c20-41dc-8362-44d626d30315","executionInfo":{"status":"ok","timestamp":1570438092920,"user_tz":-480,"elapsed":57426,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":33}},"source":["datagen = ImageDataGenerator(rescale=1./255)\n","batch_size = 20\n"," \n","train_features = np.zeros(shape=(nTrain, 7, 7, 2048))\n","train_labels = np.zeros(shape=(nTrain,12))\n"," \n","train_generator = datagen.flow_from_directory(\n","    train_dir,\n","    target_size=(image_size, image_size),\n","    batch_size=batch_size,\n","    class_mode='categorical',\n","    shuffle=True)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Found 6600 images belonging to 12 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VTc-PtNHXt86","colab_type":"code","colab":{}},"source":["i = 0\n","for inputs_batch, labels_batch in train_generator:\n","    features_batch = res_conv.predict(inputs_batch)\n","    train_features[i * batch_size : (i + 1) * batch_size] = features_batch\n","    train_labels[i * batch_size : (i + 1) * batch_size] = labels_batch\n","    i += 1\n","    if i * batch_size >= nTrain:\n","        break\n","         \n","# save the features extracted from the training dataset to be passed to model.fit for training        \n","train_features = np.reshape(train_features, (nTrain, 7 * 7 * 2048))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Xs9sICDdXyoG","colab_type":"code","outputId":"92b8828c-17ce-4596-c366-4d438eba61db","executionInfo":{"status":"ok","timestamp":1570438192993,"user_tz":-480,"elapsed":157488,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":33}},"source":["validation_features = np.zeros(shape=(nVal, 7, 7, 2048))\n","validation_labels = np.zeros(shape=(nVal,12))\n","\n","validation_generator = datagen.flow_from_directory(\n","    validation_dir,\n","    target_size=(image_size, image_size),\n","    batch_size=batch_size,\n","    class_mode='categorical',\n","    shuffle=False)\n","\n","i = 0\n","for inputs_batch, labels_batch in validation_generator:\n","    features_batch = res_conv.predict(inputs_batch)\n","    validation_features[i * batch_size : (i + 1) * batch_size] = features_batch\n","    validation_labels[i * batch_size : (i + 1) * batch_size] = labels_batch\n","    i += 1\n","    if i * batch_size >= nVal:\n","        break\n","\n","# save the features extracted from the validation dataset to be passed to model.fit for training \n","validation_features = np.reshape(validation_features, (nVal, 7 * 7 * 2048))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Found 1800 images belonging to 12 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kWuyF2cBX3Pu","colab_type":"code","outputId":"0e0eb51d-4a79-4ef7-d71e-1e245fafa186","executionInfo":{"status":"ok","timestamp":1570438192994,"user_tz":-480,"elapsed":157485,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":120}},"source":["from keras import models\n","from keras import layers\n","from keras import optimizers\n","from keras.callbacks import EarlyStopping\n","\n","model = models.Sequential()\n","model.add(layers.Dense(256, activation='relu', input_dim=7 * 7 * 2048))\n","model.add(layers.Dropout(0.5))\n","model.add(layers.Dense(12, activation='softmax'))\n","\n","model.compile(optimizer=optimizers.RMSprop(lr=2e-4),\n","              loss='categorical_crossentropy',\n","              metrics=['acc'])\n","# model.compile(optimizer='adam',\n","#               loss='categorical_crossentropy',\n","#               metrics=['acc'])\n","# # simple early stopping\n","# es = EarlyStopping(monitor='val_loss', mode='min', verbose=1)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sGlC3GWBW5iW","colab_type":"code","outputId":"c1adbd2c-5e97-46d4-842f-d4adf5777d05","executionInfo":{"status":"ok","timestamp":1570438192995,"user_tz":-480,"elapsed":157479,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":251}},"source":["model.summary()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_1 (Dense)              (None, 256)               25690368  \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 256)               0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 12)                3084      \n","=================================================================\n","Total params: 25,693,452\n","Trainable params: 25,693,452\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xos7gHxfX6GG","colab_type":"code","outputId":"af8d6b33-16c9-4521-9f1c-5ea83e55643c","executionInfo":{"status":"ok","timestamp":1570438882721,"user_tz":-480,"elapsed":847197,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["history = model.fit(train_features,\n","                    train_labels,\n","                    epochs=20,\n","                    batch_size=batch_size,\n","                    validation_data=(validation_features,validation_labels))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","Train on 6600 samples, validate on 1800 samples\n","Epoch 1/50\n","6600/6600 [==============================] - 16s 2ms/step - loss: 2.6740 - acc: 0.1095 - val_loss: 2.4254 - val_acc: 0.0961\n","Epoch 2/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.4205 - acc: 0.1198 - val_loss: 2.3619 - val_acc: 0.1667\n","Epoch 3/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3890 - acc: 0.1311 - val_loss: 2.3752 - val_acc: 0.1411\n","Epoch 4/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3921 - acc: 0.1339 - val_loss: 2.3541 - val_acc: 0.1383\n","Epoch 5/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3740 - acc: 0.1403 - val_loss: 2.3587 - val_acc: 0.1406\n","Epoch 6/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3619 - acc: 0.1430 - val_loss: 2.3306 - val_acc: 0.1806\n","Epoch 7/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3579 - acc: 0.1480 - val_loss: 2.3795 - val_acc: 0.1539\n","Epoch 8/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3589 - acc: 0.1400 - val_loss: 2.3310 - val_acc: 0.1606\n","Epoch 9/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3507 - acc: 0.1523 - val_loss: 2.3461 - val_acc: 0.1439\n","Epoch 10/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3402 - acc: 0.1458 - val_loss: 2.3152 - val_acc: 0.1550\n","Epoch 11/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3393 - acc: 0.1512 - val_loss: 2.3223 - val_acc: 0.1739\n","Epoch 12/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3358 - acc: 0.1433 - val_loss: 2.2952 - val_acc: 0.1833\n","Epoch 13/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3351 - acc: 0.1467 - val_loss: 2.2814 - val_acc: 0.1911\n","Epoch 14/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3263 - acc: 0.1542 - val_loss: 2.2926 - val_acc: 0.1817\n","Epoch 15/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3333 - acc: 0.1526 - val_loss: 2.2747 - val_acc: 0.1939\n","Epoch 16/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3176 - acc: 0.1541 - val_loss: 2.2949 - val_acc: 0.1889\n","Epoch 17/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3157 - acc: 0.1591 - val_loss: 2.3012 - val_acc: 0.1700\n","Epoch 18/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3193 - acc: 0.1570 - val_loss: 2.2593 - val_acc: 0.1911\n","Epoch 19/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3111 - acc: 0.1611 - val_loss: 2.2841 - val_acc: 0.1661\n","Epoch 20/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3040 - acc: 0.1550 - val_loss: 2.2628 - val_acc: 0.1800\n","Epoch 21/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3041 - acc: 0.1570 - val_loss: 2.2740 - val_acc: 0.1867\n","Epoch 22/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.3020 - acc: 0.1576 - val_loss: 2.2395 - val_acc: 0.2156\n","Epoch 23/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2934 - acc: 0.1592 - val_loss: 2.2689 - val_acc: 0.1639\n","Epoch 24/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2945 - acc: 0.1602 - val_loss: 2.2390 - val_acc: 0.2106\n","Epoch 25/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2882 - acc: 0.1652 - val_loss: 2.2399 - val_acc: 0.2139\n","Epoch 26/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2888 - acc: 0.1656 - val_loss: 2.2938 - val_acc: 0.1683\n","Epoch 27/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2933 - acc: 0.1650 - val_loss: 2.2434 - val_acc: 0.1894\n","Epoch 28/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2780 - acc: 0.1723 - val_loss: 2.2317 - val_acc: 0.1833\n","Epoch 29/50\n","6600/6600 [==============================] - 13s 2ms/step - loss: 2.2886 - acc: 0.1702 - val_loss: 2.2172 - val_acc: 0.2117\n","Epoch 30/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2917 - acc: 0.1652 - val_loss: 2.2542 - val_acc: 0.1844\n","Epoch 31/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2826 - acc: 0.1609 - val_loss: 2.2528 - val_acc: 0.1878\n","Epoch 32/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2757 - acc: 0.1702 - val_loss: 2.2421 - val_acc: 0.2461\n","Epoch 33/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2685 - acc: 0.1709 - val_loss: 2.2343 - val_acc: 0.1883\n","Epoch 34/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2754 - acc: 0.1688 - val_loss: 2.3011 - val_acc: 0.1483\n","Epoch 35/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2762 - acc: 0.1706 - val_loss: 2.2781 - val_acc: 0.1817\n","Epoch 36/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2600 - acc: 0.1717 - val_loss: 2.2192 - val_acc: 0.2261\n","Epoch 37/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2628 - acc: 0.1756 - val_loss: 2.1942 - val_acc: 0.1650\n","Epoch 38/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2581 - acc: 0.1689 - val_loss: 2.1824 - val_acc: 0.2217\n","Epoch 39/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2621 - acc: 0.1706 - val_loss: 2.1844 - val_acc: 0.2067\n","Epoch 40/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2520 - acc: 0.1718 - val_loss: 2.3058 - val_acc: 0.1622\n","Epoch 41/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2638 - acc: 0.1705 - val_loss: 2.2505 - val_acc: 0.1789\n","Epoch 42/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2507 - acc: 0.1797 - val_loss: 2.1851 - val_acc: 0.2372\n","Epoch 43/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2555 - acc: 0.1703 - val_loss: 2.2009 - val_acc: 0.2172\n","Epoch 44/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2510 - acc: 0.1791 - val_loss: 2.2170 - val_acc: 0.1872\n","Epoch 45/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2434 - acc: 0.1739 - val_loss: 2.1821 - val_acc: 0.2489\n","Epoch 46/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2561 - acc: 0.1776 - val_loss: 2.1920 - val_acc: 0.2139\n","Epoch 47/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2315 - acc: 0.1852 - val_loss: 2.1694 - val_acc: 0.2411\n","Epoch 48/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2343 - acc: 0.1836 - val_loss: 2.2794 - val_acc: 0.1689\n","Epoch 49/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2484 - acc: 0.1717 - val_loss: 2.1608 - val_acc: 0.1911\n","Epoch 50/50\n","6600/6600 [==============================] - 14s 2ms/step - loss: 2.2274 - acc: 0.1789 - val_loss: 2.3111 - val_acc: 0.1650\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y8_pWA2XX-EC","colab_type":"code","colab":{}},"source":["# model evaluation \n","# Get the filenames from the generator\n","fnames = validation_generator.filenames\n","\n","# Get the ground truth from generator\n","ground_truth = validation_generator.classes\n","\n","# Get the label to class mapping from the generator\n","label2index = validation_generator.class_indices\n"," \n","# Getting the mapping from class index to class label\n","idx2label = dict((v,k) for k,v in label2index.items())"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"CshcVIEWYOSf","colab_type":"code","colab":{}},"source":["# Get the predictions from the model using the generator\n","predictions = model.predict_classes(validation_features)\n","prob = model.predict(validation_features)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7fsf_v1SYVxq","colab_type":"code","outputId":"79433c37-de99-4324-d6d2-defb773ea72a","executionInfo":{"status":"ok","timestamp":1570438884858,"user_tz":-480,"elapsed":849319,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":67}},"source":["# Show the errors\n","errors = np.where(predictions != ground_truth)[0]\n","print(\"No of errors = {}/{}\".format(len(errors),nVal))\n","print('Accuracy')\n","print((nVal-len(errors))*100/nVal)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["No of errors = 1503/1800\n","Accuracy\n","16.5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ph7ZLI2zLU8Z","colab_type":"code","outputId":"ade596e8-101f-47f9-d12c-89f656cc6ab0","executionInfo":{"status":"ok","timestamp":1570438884859,"user_tz":-480,"elapsed":849316,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/"}},"source":["print(len(errors))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["1503\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"cIHw7CGJVmZH","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"yJjdj8qg7T91","colab_type":"code","outputId":"93061445-224d-4edc-8174-1e3981918ee0","executionInfo":{"status":"ok","timestamp":1570438884860,"user_tz":-480,"elapsed":849315,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/"}},"source":["# print(\"Accuracy = {}/{}\".format)\n","print(nVal)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["1800\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"q2hqy3MvVYEm","colab_type":"code","outputId":"b9a45293-72c5-4980-c660-ffcc17e571cd","executionInfo":{"status":"ok","timestamp":1570438884861,"user_tz":-480,"elapsed":849313,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/"}},"source":["print"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function print>"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"z-mB7K_AF7wB","colab_type":"code","colab":{}},"source":["model.save('/content/gdrive/My Drive/Colab Notebooks/vip2/res-classifier.h5')\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"zw1exI3SgIfw","colab_type":"code","outputId":"61f1fde2-00b1-4388-c7f0-6734430b236f","executionInfo":{"status":"ok","timestamp":1570438886893,"user_tz":-480,"elapsed":851336,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/"}},"source":["model.summary()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_1 (Dense)              (None, 256)               25690368  \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 256)               0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 12)                3084      \n","=================================================================\n","Total params: 25,693,452\n","Trainable params: 25,693,452\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dQHO3JABH8N2","colab_type":"code","outputId":"447af5b3-cc98-48be-988f-af2dc3328bfa","executionInfo":{"status":"ok","timestamp":1570438887655,"user_tz":-480,"elapsed":852090,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":545}},"source":["# Plot the accuracy and loss curves\n","acc = history.history['acc']\n","val_acc = history.history['val_acc']\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","epochs = range(len(acc))\n","\n","plt.plot(epochs, acc, 'b', label='Training acc')\n","plt.plot(epochs, val_acc, 'r', label='Validation acc')\n","plt.title('Training and validation accuracy')\n","plt.legend()\n","\n","plt.figure()\n","\n","plt.plot(epochs, loss, 'b', label='Training loss')\n","plt.plot(epochs, val_loss, 'r', label='Validation loss')\n","plt.title('Training and validation loss')\n","plt.legend()\n","\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nuf+lKwUAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\nJgE1f3fbbTe6dOnChAkT6NevH6NHj+bUU09FRMjMzGTcuHHUqlWL1atXc8ghh3DCCSeEXUf0ySef\nZNddd2Xu3LnMmjWrSMneu+++m912243t27dz1FFHMWvWLK644goefvhhJk2aRP369Yv0NX36dF58\n8UWmTp2KqnLwwQfTvXt36taty8KFC3njjTd49tlnOfXUUxk7dmzE+uznnHMOjz32GN27d+fWW2/l\njjvuYMSIEdx333388ssv7LzzzvmhoIceeojHH3+crl27smnTJjIzM0vzbUclqT13F3fHSS4Kh2YK\nh2RUlWHDhtGuXTuOPvpoli5dyooVK8L2M3ny5HyRbdeuHe3atcv/bMyYMXTq1ImOHTsyZ86cqEXB\npkyZQv/+/alevTo1atTgpJNO4quvvgKgWbNmdOjQAYhcVhisvvy6devo3r07AIMGDWLy5Mn5Np51\n1lm89tpr+TNhu3btyjXXXMPIkSNZt25d3GfIJqXn7jF3xyknCar5269fP66++mpmzJhBTk4OBx54\nIACjRo1i1apVTJ8+nYyMDLKyskKW+Y3GL7/8wkMPPcT3339P3bp1GTx4cJn6CRIsFwxWMjhaWCYc\nH374IZMnT+b999/n7rvvZvbs2QwdOpTjjjuO8ePH07VrVyZOnEiLFi3KbGtxktJzr17dSv96zN1x\nkosaNWrQo0cP/vnPfxYZSF2/fj277747GRkZTJo0iV9//TViP0cccQSvv/46AD/++COzZs0CrFxw\n9erVqV27NitWrGDChAn5+9SsWTNkXLtbt26888475OTksHnzZsaNG0e3bt1KfW61a9embt26+V7/\nq6++Svfu3cnLy+P333+nR48e3H///axfv55Nmzbx888/07ZtW2644QYOOugg5s2bV+pjRiIpPXcR\nn6XqOMnKGWecQf/+/Ytkzpx11ln07duXtm3b0rlz56ge7MUXX8y5555Ly5YtadmyZf4dQPv27enY\nsSMtWrSgSZMmRcoFDxkyhN69e7PXXnsxadKk/O2dOnVi8ODBdOnSBYDzzz+fjh07RgzBhOPll1/m\noosuIicnh3322YcXX3yR7du3M3DgQNavX4+qcsUVV1CnTh1uueUWJk2aRFpaGq1bt85fVSpeJGXJ\nX4D99oMuXWDUqDga5TgpjJf8TT7KU/I3KcMy4At2OI7jRCKpxd3DMo7jOKGJKu4i0kREJonITyIy\n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\nAaYB05o2bVpx83N3FObPV83IUD3nnMo5Xm6u6vjxqiefbMcF1V13tQXGK7FOQW6u6m+/qX78sWqv\nXmZG06a26HhubqWZkTzceKN9SUcfrbp9e6KtMR5/vKB86dy5ibam8njwQTvndevK3AXxLj8gIjWA\nscBVqrohxEVinKq2AE4E7gxzIXlGVTuraucGDRrEfAFywrD//pZ28sorVjO+oti2De6804LjffrY\n4t+XX25xlSeesEVMvvqq4o5fjPR0aNLE1j2ZOBE+/dRCOoMHW5rlBx8UxO7XrrWFtL7/3tp+/nnB\n3cEOw+TJFgv79NOiK4olksWLC1J8x49PrC2VydKltthCrVoVf6xYrgBABjARuCbG9ouB+pHaJGXh\nsKrIpk3mOWdmqr75Zmz7fPCB6qOPxu5tX3WVeRvHHGPH+PvvosevWVN10KBSmx5P8vJUx4yxryJY\nEC0trcA5LPzYc0/VYcOsXltENm60xi+/rKp2V/Df/6recYfqkUeq3nRT+R3hjRtVf/yxAh3qnBzV\nnXZSve461RNOUN1556pRtL9/f9VWrVRbt1bt2TPR1lQeAwaoHnBAubogXlUhAQFeAUZEaLMvBTnz\nnYClwffhHi7ucWTlStVDD7Wf8777wov2hg2q551XoHK33x6971desbZXXhm+zQUXWHhm/fqy2R9H\ntm5VffZZK7B5yy2qjzxi2vz++7Zoydtvqx5/fIHw9+xpa6ls2VK0j/XrVf98bqwq6LL9u+spp6jW\nrWv7iNj/J9g1LZZ1W1TtZ5o40X6i005T3X9/6wtsDZhJkyrgC/niCzvA++9badDdd1dt1071r78q\n4GCloH17+yGuv95CfFXgb6dSOPTQcl/M4inuh2MDpLOAmYFHH+Ai4KJAmxuAOYHPvgUOj9avi3uc\n2bLFFANMwLduLfr5N9/YSlBpaRaDDdb1feqp8H1On253BN27l+yvMP/9r/X19NNxOZXKIDtb9a67\nVJs1Kxg6qFXLSiIHr30vYN9RLmnado8Veu65diFYtcqun8OHW7uTTy56M1OcNWtUzz676N3D3nvb\nIlx33KE6cqRqkya2vV8/G0qJG8OH2xXkzz/t/Qcf2IGuuy6OBykleXl2t3fFFQUXn7FjE2dPZdKk\nSbnHyOIm7hX1cHGvALZvt1gBqB51lOratSbKweX+srJUv/rK2m7dqtqnj20fN65kXytX2ihlkybm\n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\nuE9RAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"BvNuWZg9aqhC","colab_type":"code","outputId":"76abfd29-c4e0-4c67-80a1-1629882c75ad","executionInfo":{"status":"ok","timestamp":1570438887657,"user_tz":-480,"elapsed":486833,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["for layer in res_conv.layers[:-16]:\n","  layer.trainable=False\n","  \n","#check the trainable status of each \n","for layer in res_conv.layers:\n","  print(layer,layer.trainable)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["<keras.engine.input_layer.InputLayer object at 0x7f3c88c46048> False\n","<keras.layers.convolutional.ZeroPadding2D object at 0x7f3c51cb0c18> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c51cb0080> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c51cb0d30> False\n","<keras.layers.core.Activation object at 0x7f3c51cb0c88> False\n","<keras.layers.convolutional.ZeroPadding2D object at 0x7f3c51cdb710> False\n","<keras.layers.pooling.MaxPooling2D object at 0x7f3c51cdbe80> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c514aa860> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c40624518> False\n","<keras.layers.core.Activation object at 0x7f3c40624f28> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c4061b8d0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c4065fa20> False\n","<keras.layers.core.Activation object at 0x7f3c405876d8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c52542eb8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c40521e48> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c40561940> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c40455a90> False\n","<keras.layers.merge.Add object at 0x7f3c40411f60> False\n","<keras.layers.core.Activation object at 0x7f3c40386940> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c40325588> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c4031b2b0> False\n","<keras.layers.core.Activation object at 0x7f3c40274160> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c40227d30> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c4023df98> False\n","<keras.layers.core.Activation object at 0x7f3c401fbb70> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c40193400> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c400b7fd0> False\n","<keras.layers.merge.Add object at 0x7f3c400e6b00> False\n","<keras.layers.core.Activation object at 0x7f3c4007bcc0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c4007bcf8> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c058f4438> False\n","<keras.layers.core.Activation object at 0x7f3c058be550> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c05831f60> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c05898978> False\n","<keras.layers.core.Activation object at 0x7f3c05853860> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0573b4e0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c05798f98> False\n","<keras.layers.merge.Add object at 0x7f3c057544a8> False\n","<keras.layers.core.Activation object at 0x7f3c0569ffd0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c056806a0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0563e9e8> False\n","<keras.layers.core.Activation object at 0x7f3c0560f9b0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c055a4358> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c055eabe0> False\n","<keras.layers.core.Activation object at 0x7f3c055558d0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c054d1b70> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c054ab9b0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c054ebf98> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c053d97f0> False\n","<keras.layers.merge.Add object at 0x7f3c05397f60> False\n","<keras.layers.core.Activation object at 0x7f3c0530d940> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0532a588> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0529e2e8> False\n","<keras.layers.core.Activation object at 0x7f3c051f81d0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0522ccf8> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c051c4828> False\n","<keras.layers.core.Activation object at 0x7f3c05184b38> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c050f3e80> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c050dc1d0> False\n","<keras.layers.merge.Add object at 0x7f3c0507d2b0> False\n","<keras.layers.core.Activation object at 0x7f3c04feecf8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04feed30> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04f72ef0> False\n","<keras.layers.core.Activation object at 0x7f3c04f2f668> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04ef7278> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04f0e748> False\n","<keras.layers.core.Activation object at 0x7f3c04ecaeb8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04dae630> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04e0dda0> False\n","<keras.layers.merge.Add object at 0x7f3c04dcb5f8> False\n","<keras.layers.core.Activation object at 0x7f3c04d44eb8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04d448d0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04cb7b00> False\n","<keras.layers.core.Activation object at 0x7f3c04c85ac8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04c1c390> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04c628d0> False\n","<keras.layers.core.Activation object at 0x7f3c04bcd9e8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04b48c88> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04b62ef0> False\n","<keras.layers.merge.Add object at 0x7f3c04b24940> False\n","<keras.layers.core.Activation object at 0x7f3c04a9ad30> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04a9acf8> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04a088d0> False\n","<keras.layers.core.Activation object at 0x7f3c04985470> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c048f28d0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04952f60> False\n","<keras.layers.core.Activation object at 0x7f3c04910898> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0488bc50> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c047f8860> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0483d668> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04710dd8> False\n","<keras.layers.merge.Add object at 0x7f3c046b7588> False\n","<keras.layers.core.Activation object at 0x7f3c04678da0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04678390> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04667ef0> False\n","<keras.layers.core.Activation object at 0x7f3c045d2400> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04549da0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c045aa860> False\n","<keras.layers.core.Activation object at 0x7f3c04569c50> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0444f400> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04495860> False\n","<keras.layers.merge.Add object at 0x7f3c04400978> False\n","<keras.layers.core.Activation object at 0x7f3c04336ac8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c04396588> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c043599b0> False\n","<keras.layers.core.Activation object at 0x7f3c042ce400> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0423d860> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0429df60> False\n","<keras.layers.core.Activation object at 0x7f3c0425b160> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0419df28> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c04182940> False\n","<keras.layers.merge.Add object at 0x7f3c04142828> False\n","<keras.layers.core.Activation object at 0x7f3c040d28d0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c040d2a20> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0404d358> False\n","<keras.layers.core.Activation object at 0x7f3c0401a940> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03f31320> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c03f73f28> False\n","<keras.layers.core.Activation object at 0x7f3c03f5f898> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03e98940> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c03e77f98> False\n","<keras.layers.merge.Add object at 0x7f3c03e379e8> False\n","<keras.layers.core.Activation object at 0x7f3c03dafdd8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03dafbe0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c03d9efd0> False\n","<keras.layers.core.Activation object at 0x7f3c03d07438> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03c7eda0> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c03ce2860> False\n","<keras.layers.core.Activation object at 0x7f3c03ca0c50> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03b86400> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c03bcd860> False\n","<keras.layers.merge.Add object at 0x7f3c03b37978> False\n","<keras.layers.core.Activation object at 0x7f3c03aedac8> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03acd588> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c03a909b0> False\n","<keras.layers.core.Activation object at 0x7f3c03a05400> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03971860> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c039d3f60> False\n","<keras.layers.core.Activation object at 0x7f3c0398f208> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c038d3e48> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c038b8940> False\n","<keras.layers.merge.Add object at 0x7f3c03878c88> False\n","<keras.layers.core.Activation object at 0x7f3c0380c8d0> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0380ca20> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0377d390> False\n","<keras.layers.core.Activation object at 0x7f3c0374e978> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c036e4320> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0372af28> False\n","<keras.layers.core.Activation object at 0x7f3c03693898> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c035cf940> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c035ec9e8> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c035aef98> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c034d4fd0> False\n","<keras.layers.merge.Add object at 0x7f3c0346fba8> False\n","<keras.layers.core.Activation object at 0x7f3c03404f98> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c0341c550> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c033de9e8> False\n","<keras.layers.core.Activation object at 0x7f3c03350320> False\n","<keras.layers.convolutional.Conv2D object at 0x7f3c032bd7b8> False\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c0331ffd0> True\n","<keras.layers.core.Activation object at 0x7f3c032dd0f0> True\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03223dd8> True\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c03206898> True\n","<keras.layers.merge.Add object at 0x7f3c031c6c88> True\n","<keras.layers.core.Activation object at 0x7f3c0315f828> True\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03465c88> True\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c030cc518> True\n","<keras.layers.core.Activation object at 0x7f3c0309a8d0> True\n","<keras.layers.convolutional.Conv2D object at 0x7f3c03044fd0> True\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c02fb3278> True\n","<keras.layers.core.Activation object at 0x7f3c02fd1390> True\n","<keras.layers.convolutional.Conv2D object at 0x7f3c02f1b898> True\n","<keras.layers.normalization.BatchNormalization object at 0x7f3c02efaf28> True\n","<keras.layers.merge.Add object at 0x7f3c02eb8240> True\n","<keras.layers.core.Activation object at 0x7f3c02e30d30> True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BsoAX5XSLJz1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"b1d9fbc1-772f-4d2f-f5ea-45028e7d33ee","executionInfo":{"status":"ok","timestamp":1570453454285,"user_tz":-480,"elapsed":16758,"user":{"displayName":"LIM CAI XIAN LUCINDA","photoUrl":"","userId":"12327338794304454977"}}},"source":["res_conv1 = ResNet50(weights='imagenet',\n","                  include_top=True,\n","                  input_shape=(224, 224, 3))\n","\n","res_conv1.summary()"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Downloading data from https://github.com/fchollet/deep-learning-models/releases/download/v0.2/resnet50_weights_tf_dim_ordering_tf_kernels.h5\n","102858752/102853048 [==============================] - 4s 0us/step\n","Model: \"resnet50\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_2 (InputLayer)            (None, 224, 224, 3)  0                                            \n","__________________________________________________________________________________________________\n","conv1_pad (ZeroPadding2D)       (None, 230, 230, 3)  0           input_2[0][0]                    \n","__________________________________________________________________________________________________\n","conv1 (Conv2D)                  (None, 112, 112, 64) 9472        conv1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","bn_conv1 (BatchNormalization)   (None, 112, 112, 64) 256         conv1[0][0]                      \n","__________________________________________________________________________________________________\n","activation_41 (Activation)      (None, 112, 112, 64) 0           bn_conv1[0][0]                   \n","__________________________________________________________________________________________________\n","pool1_pad (ZeroPadding2D)       (None, 114, 114, 64) 0           activation_41[0][0]              \n","__________________________________________________________________________________________________\n","max_pooling2d_2 (MaxPooling2D)  (None, 56, 56, 64)   0           pool1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","res2a_branch2a (Conv2D)         (None, 56, 56, 64)   4160        max_pooling2d_2[0][0]            \n","__________________________________________________________________________________________________\n","bn2a_branch2a (BatchNormalizati (None, 56, 56, 64)   256         res2a_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_42 (Activation)      (None, 56, 56, 64)   0           bn2a_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res2a_branch2b (Conv2D)         (None, 56, 56, 64)   36928       activation_42[0][0]              \n","__________________________________________________________________________________________________\n","bn2a_branch2b (BatchNormalizati (None, 56, 56, 64)   256         res2a_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_43 (Activation)      (None, 56, 56, 64)   0           bn2a_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res2a_branch2c (Conv2D)         (None, 56, 56, 256)  16640       activation_43[0][0]              \n","__________________________________________________________________________________________________\n","res2a_branch1 (Conv2D)          (None, 56, 56, 256)  16640       max_pooling2d_2[0][0]            \n","__________________________________________________________________________________________________\n","bn2a_branch2c (BatchNormalizati (None, 56, 56, 256)  1024        res2a_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","bn2a_branch1 (BatchNormalizatio (None, 56, 56, 256)  1024        res2a_branch1[0][0]              \n","__________________________________________________________________________________________________\n","add_14 (Add)                    (None, 56, 56, 256)  0           bn2a_branch2c[0][0]              \n","                                                                 bn2a_branch1[0][0]               \n","__________________________________________________________________________________________________\n","activation_44 (Activation)      (None, 56, 56, 256)  0           add_14[0][0]                     \n","__________________________________________________________________________________________________\n","res2b_branch2a (Conv2D)         (None, 56, 56, 64)   16448       activation_44[0][0]              \n","__________________________________________________________________________________________________\n","bn2b_branch2a (BatchNormalizati (None, 56, 56, 64)   256         res2b_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_45 (Activation)      (None, 56, 56, 64)   0           bn2b_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res2b_branch2b (Conv2D)         (None, 56, 56, 64)   36928       activation_45[0][0]              \n","__________________________________________________________________________________________________\n","bn2b_branch2b (BatchNormalizati (None, 56, 56, 64)   256         res2b_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_46 (Activation)      (None, 56, 56, 64)   0           bn2b_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res2b_branch2c (Conv2D)         (None, 56, 56, 256)  16640       activation_46[0][0]              \n","__________________________________________________________________________________________________\n","bn2b_branch2c (BatchNormalizati (None, 56, 56, 256)  1024        res2b_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_15 (Add)                    (None, 56, 56, 256)  0           bn2b_branch2c[0][0]              \n","                                                                 activation_44[0][0]              \n","__________________________________________________________________________________________________\n","activation_47 (Activation)      (None, 56, 56, 256)  0           add_15[0][0]                     \n","__________________________________________________________________________________________________\n","res2c_branch2a (Conv2D)         (None, 56, 56, 64)   16448       activation_47[0][0]              \n","__________________________________________________________________________________________________\n","bn2c_branch2a (BatchNormalizati (None, 56, 56, 64)   256         res2c_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_48 (Activation)      (None, 56, 56, 64)   0           bn2c_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res2c_branch2b (Conv2D)         (None, 56, 56, 64)   36928       activation_48[0][0]              \n","__________________________________________________________________________________________________\n","bn2c_branch2b (BatchNormalizati (None, 56, 56, 64)   256         res2c_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_49 (Activation)      (None, 56, 56, 64)   0           bn2c_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res2c_branch2c (Conv2D)         (None, 56, 56, 256)  16640       activation_49[0][0]              \n","__________________________________________________________________________________________________\n","bn2c_branch2c (BatchNormalizati (None, 56, 56, 256)  1024        res2c_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_16 (Add)                    (None, 56, 56, 256)  0           bn2c_branch2c[0][0]              \n","                                                                 activation_47[0][0]              \n","__________________________________________________________________________________________________\n","activation_50 (Activation)      (None, 56, 56, 256)  0           add_16[0][0]                     \n","__________________________________________________________________________________________________\n","res3a_branch2a (Conv2D)         (None, 28, 28, 128)  32896       activation_50[0][0]              \n","__________________________________________________________________________________________________\n","bn3a_branch2a (BatchNormalizati (None, 28, 28, 128)  512         res3a_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_51 (Activation)      (None, 28, 28, 128)  0           bn3a_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res3a_branch2b (Conv2D)         (None, 28, 28, 128)  147584      activation_51[0][0]              \n","__________________________________________________________________________________________________\n","bn3a_branch2b (BatchNormalizati (None, 28, 28, 128)  512         res3a_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_52 (Activation)      (None, 28, 28, 128)  0           bn3a_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res3a_branch2c (Conv2D)         (None, 28, 28, 512)  66048       activation_52[0][0]              \n","__________________________________________________________________________________________________\n","res3a_branch1 (Conv2D)          (None, 28, 28, 512)  131584      activation_50[0][0]              \n","__________________________________________________________________________________________________\n","bn3a_branch2c (BatchNormalizati (None, 28, 28, 512)  2048        res3a_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","bn3a_branch1 (BatchNormalizatio (None, 28, 28, 512)  2048        res3a_branch1[0][0]              \n","__________________________________________________________________________________________________\n","add_17 (Add)                    (None, 28, 28, 512)  0           bn3a_branch2c[0][0]              \n","                                                                 bn3a_branch1[0][0]               \n","__________________________________________________________________________________________________\n","activation_53 (Activation)      (None, 28, 28, 512)  0           add_17[0][0]                     \n","__________________________________________________________________________________________________\n","res3b_branch2a (Conv2D)         (None, 28, 28, 128)  65664       activation_53[0][0]              \n","__________________________________________________________________________________________________\n","bn3b_branch2a (BatchNormalizati (None, 28, 28, 128)  512         res3b_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_54 (Activation)      (None, 28, 28, 128)  0           bn3b_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res3b_branch2b (Conv2D)         (None, 28, 28, 128)  147584      activation_54[0][0]              \n","__________________________________________________________________________________________________\n","bn3b_branch2b (BatchNormalizati (None, 28, 28, 128)  512         res3b_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_55 (Activation)      (None, 28, 28, 128)  0           bn3b_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res3b_branch2c (Conv2D)         (None, 28, 28, 512)  66048       activation_55[0][0]              \n","__________________________________________________________________________________________________\n","bn3b_branch2c (BatchNormalizati (None, 28, 28, 512)  2048        res3b_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_18 (Add)                    (None, 28, 28, 512)  0           bn3b_branch2c[0][0]              \n","                                                                 activation_53[0][0]              \n","__________________________________________________________________________________________________\n","activation_56 (Activation)      (None, 28, 28, 512)  0           add_18[0][0]                     \n","__________________________________________________________________________________________________\n","res3c_branch2a (Conv2D)         (None, 28, 28, 128)  65664       activation_56[0][0]              \n","__________________________________________________________________________________________________\n","bn3c_branch2a (BatchNormalizati (None, 28, 28, 128)  512         res3c_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_57 (Activation)      (None, 28, 28, 128)  0           bn3c_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res3c_branch2b (Conv2D)         (None, 28, 28, 128)  147584      activation_57[0][0]              \n","__________________________________________________________________________________________________\n","bn3c_branch2b (BatchNormalizati (None, 28, 28, 128)  512         res3c_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_58 (Activation)      (None, 28, 28, 128)  0           bn3c_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res3c_branch2c (Conv2D)         (None, 28, 28, 512)  66048       activation_58[0][0]              \n","__________________________________________________________________________________________________\n","bn3c_branch2c (BatchNormalizati (None, 28, 28, 512)  2048        res3c_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_19 (Add)                    (None, 28, 28, 512)  0           bn3c_branch2c[0][0]              \n","                                                                 activation_56[0][0]              \n","__________________________________________________________________________________________________\n","activation_59 (Activation)      (None, 28, 28, 512)  0           add_19[0][0]                     \n","__________________________________________________________________________________________________\n","res3d_branch2a (Conv2D)         (None, 28, 28, 128)  65664       activation_59[0][0]              \n","__________________________________________________________________________________________________\n","bn3d_branch2a (BatchNormalizati (None, 28, 28, 128)  512         res3d_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_60 (Activation)      (None, 28, 28, 128)  0           bn3d_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res3d_branch2b (Conv2D)         (None, 28, 28, 128)  147584      activation_60[0][0]              \n","__________________________________________________________________________________________________\n","bn3d_branch2b (BatchNormalizati (None, 28, 28, 128)  512         res3d_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_61 (Activation)      (None, 28, 28, 128)  0           bn3d_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res3d_branch2c (Conv2D)         (None, 28, 28, 512)  66048       activation_61[0][0]              \n","__________________________________________________________________________________________________\n","bn3d_branch2c (BatchNormalizati (None, 28, 28, 512)  2048        res3d_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_20 (Add)                    (None, 28, 28, 512)  0           bn3d_branch2c[0][0]              \n","                                                                 activation_59[0][0]              \n","__________________________________________________________________________________________________\n","activation_62 (Activation)      (None, 28, 28, 512)  0           add_20[0][0]                     \n","__________________________________________________________________________________________________\n","res4a_branch2a (Conv2D)         (None, 14, 14, 256)  131328      activation_62[0][0]              \n","__________________________________________________________________________________________________\n","bn4a_branch2a (BatchNormalizati (None, 14, 14, 256)  1024        res4a_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_63 (Activation)      (None, 14, 14, 256)  0           bn4a_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res4a_branch2b (Conv2D)         (None, 14, 14, 256)  590080      activation_63[0][0]              \n","__________________________________________________________________________________________________\n","bn4a_branch2b (BatchNormalizati (None, 14, 14, 256)  1024        res4a_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_64 (Activation)      (None, 14, 14, 256)  0           bn4a_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res4a_branch2c (Conv2D)         (None, 14, 14, 1024) 263168      activation_64[0][0]              \n","__________________________________________________________________________________________________\n","res4a_branch1 (Conv2D)          (None, 14, 14, 1024) 525312      activation_62[0][0]              \n","__________________________________________________________________________________________________\n","bn4a_branch2c (BatchNormalizati (None, 14, 14, 1024) 4096        res4a_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","bn4a_branch1 (BatchNormalizatio (None, 14, 14, 1024) 4096        res4a_branch1[0][0]              \n","__________________________________________________________________________________________________\n","add_21 (Add)                    (None, 14, 14, 1024) 0           bn4a_branch2c[0][0]              \n","                                                                 bn4a_branch1[0][0]               \n","__________________________________________________________________________________________________\n","activation_65 (Activation)      (None, 14, 14, 1024) 0           add_21[0][0]                     \n","__________________________________________________________________________________________________\n","res4b_branch2a (Conv2D)         (None, 14, 14, 256)  262400      activation_65[0][0]              \n","__________________________________________________________________________________________________\n","bn4b_branch2a (BatchNormalizati (None, 14, 14, 256)  1024        res4b_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_66 (Activation)      (None, 14, 14, 256)  0           bn4b_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res4b_branch2b (Conv2D)         (None, 14, 14, 256)  590080      activation_66[0][0]              \n","__________________________________________________________________________________________________\n","bn4b_branch2b (BatchNormalizati (None, 14, 14, 256)  1024        res4b_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_67 (Activation)      (None, 14, 14, 256)  0           bn4b_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res4b_branch2c (Conv2D)         (None, 14, 14, 1024) 263168      activation_67[0][0]              \n","__________________________________________________________________________________________________\n","bn4b_branch2c (BatchNormalizati (None, 14, 14, 1024) 4096        res4b_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_22 (Add)                    (None, 14, 14, 1024) 0           bn4b_branch2c[0][0]              \n","                                                                 activation_65[0][0]              \n","__________________________________________________________________________________________________\n","activation_68 (Activation)      (None, 14, 14, 1024) 0           add_22[0][0]                     \n","__________________________________________________________________________________________________\n","res4c_branch2a (Conv2D)         (None, 14, 14, 256)  262400      activation_68[0][0]              \n","__________________________________________________________________________________________________\n","bn4c_branch2a (BatchNormalizati (None, 14, 14, 256)  1024        res4c_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_69 (Activation)      (None, 14, 14, 256)  0           bn4c_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res4c_branch2b (Conv2D)         (None, 14, 14, 256)  590080      activation_69[0][0]              \n","__________________________________________________________________________________________________\n","bn4c_branch2b (BatchNormalizati (None, 14, 14, 256)  1024        res4c_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_70 (Activation)      (None, 14, 14, 256)  0           bn4c_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res4c_branch2c (Conv2D)         (None, 14, 14, 1024) 263168      activation_70[0][0]              \n","__________________________________________________________________________________________________\n","bn4c_branch2c (BatchNormalizati (None, 14, 14, 1024) 4096        res4c_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_23 (Add)                    (None, 14, 14, 1024) 0           bn4c_branch2c[0][0]              \n","                                                                 activation_68[0][0]              \n","__________________________________________________________________________________________________\n","activation_71 (Activation)      (None, 14, 14, 1024) 0           add_23[0][0]                     \n","__________________________________________________________________________________________________\n","res4d_branch2a (Conv2D)         (None, 14, 14, 256)  262400      activation_71[0][0]              \n","__________________________________________________________________________________________________\n","bn4d_branch2a (BatchNormalizati (None, 14, 14, 256)  1024        res4d_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_72 (Activation)      (None, 14, 14, 256)  0           bn4d_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res4d_branch2b (Conv2D)         (None, 14, 14, 256)  590080      activation_72[0][0]              \n","__________________________________________________________________________________________________\n","bn4d_branch2b (BatchNormalizati (None, 14, 14, 256)  1024        res4d_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_73 (Activation)      (None, 14, 14, 256)  0           bn4d_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res4d_branch2c (Conv2D)         (None, 14, 14, 1024) 263168      activation_73[0][0]              \n","__________________________________________________________________________________________________\n","bn4d_branch2c (BatchNormalizati (None, 14, 14, 1024) 4096        res4d_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_24 (Add)                    (None, 14, 14, 1024) 0           bn4d_branch2c[0][0]              \n","                                                                 activation_71[0][0]              \n","__________________________________________________________________________________________________\n","activation_74 (Activation)      (None, 14, 14, 1024) 0           add_24[0][0]                     \n","__________________________________________________________________________________________________\n","res4e_branch2a (Conv2D)         (None, 14, 14, 256)  262400      activation_74[0][0]              \n","__________________________________________________________________________________________________\n","bn4e_branch2a (BatchNormalizati (None, 14, 14, 256)  1024        res4e_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_75 (Activation)      (None, 14, 14, 256)  0           bn4e_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res4e_branch2b (Conv2D)         (None, 14, 14, 256)  590080      activation_75[0][0]              \n","__________________________________________________________________________________________________\n","bn4e_branch2b (BatchNormalizati (None, 14, 14, 256)  1024        res4e_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_76 (Activation)      (None, 14, 14, 256)  0           bn4e_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res4e_branch2c (Conv2D)         (None, 14, 14, 1024) 263168      activation_76[0][0]              \n","__________________________________________________________________________________________________\n","bn4e_branch2c (BatchNormalizati (None, 14, 14, 1024) 4096        res4e_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_25 (Add)                    (None, 14, 14, 1024) 0           bn4e_branch2c[0][0]              \n","                                                                 activation_74[0][0]              \n","__________________________________________________________________________________________________\n","activation_77 (Activation)      (None, 14, 14, 1024) 0           add_25[0][0]                     \n","__________________________________________________________________________________________________\n","res4f_branch2a (Conv2D)         (None, 14, 14, 256)  262400      activation_77[0][0]              \n","__________________________________________________________________________________________________\n","bn4f_branch2a (BatchNormalizati (None, 14, 14, 256)  1024        res4f_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_78 (Activation)      (None, 14, 14, 256)  0           bn4f_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res4f_branch2b (Conv2D)         (None, 14, 14, 256)  590080      activation_78[0][0]              \n","__________________________________________________________________________________________________\n","bn4f_branch2b (BatchNormalizati (None, 14, 14, 256)  1024        res4f_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_79 (Activation)      (None, 14, 14, 256)  0           bn4f_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res4f_branch2c (Conv2D)         (None, 14, 14, 1024) 263168      activation_79[0][0]              \n","__________________________________________________________________________________________________\n","bn4f_branch2c (BatchNormalizati (None, 14, 14, 1024) 4096        res4f_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_26 (Add)                    (None, 14, 14, 1024) 0           bn4f_branch2c[0][0]              \n","                                                                 activation_77[0][0]              \n","__________________________________________________________________________________________________\n","activation_80 (Activation)      (None, 14, 14, 1024) 0           add_26[0][0]                     \n","__________________________________________________________________________________________________\n","res5a_branch2a (Conv2D)         (None, 7, 7, 512)    524800      activation_80[0][0]              \n","__________________________________________________________________________________________________\n","bn5a_branch2a (BatchNormalizati (None, 7, 7, 512)    2048        res5a_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_81 (Activation)      (None, 7, 7, 512)    0           bn5a_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res5a_branch2b (Conv2D)         (None, 7, 7, 512)    2359808     activation_81[0][0]              \n","__________________________________________________________________________________________________\n","bn5a_branch2b (BatchNormalizati (None, 7, 7, 512)    2048        res5a_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_82 (Activation)      (None, 7, 7, 512)    0           bn5a_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res5a_branch2c (Conv2D)         (None, 7, 7, 2048)   1050624     activation_82[0][0]              \n","__________________________________________________________________________________________________\n","res5a_branch1 (Conv2D)          (None, 7, 7, 2048)   2099200     activation_80[0][0]              \n","__________________________________________________________________________________________________\n","bn5a_branch2c (BatchNormalizati (None, 7, 7, 2048)   8192        res5a_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","bn5a_branch1 (BatchNormalizatio (None, 7, 7, 2048)   8192        res5a_branch1[0][0]              \n","__________________________________________________________________________________________________\n","add_27 (Add)                    (None, 7, 7, 2048)   0           bn5a_branch2c[0][0]              \n","                                                                 bn5a_branch1[0][0]               \n","__________________________________________________________________________________________________\n","activation_83 (Activation)      (None, 7, 7, 2048)   0           add_27[0][0]                     \n","__________________________________________________________________________________________________\n","res5b_branch2a (Conv2D)         (None, 7, 7, 512)    1049088     activation_83[0][0]              \n","__________________________________________________________________________________________________\n","bn5b_branch2a (BatchNormalizati (None, 7, 7, 512)    2048        res5b_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_84 (Activation)      (None, 7, 7, 512)    0           bn5b_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res5b_branch2b (Conv2D)         (None, 7, 7, 512)    2359808     activation_84[0][0]              \n","__________________________________________________________________________________________________\n","bn5b_branch2b (BatchNormalizati (None, 7, 7, 512)    2048        res5b_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_85 (Activation)      (None, 7, 7, 512)    0           bn5b_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res5b_branch2c (Conv2D)         (None, 7, 7, 2048)   1050624     activation_85[0][0]              \n","__________________________________________________________________________________________________\n","bn5b_branch2c (BatchNormalizati (None, 7, 7, 2048)   8192        res5b_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_28 (Add)                    (None, 7, 7, 2048)   0           bn5b_branch2c[0][0]              \n","                                                                 activation_83[0][0]              \n","__________________________________________________________________________________________________\n","activation_86 (Activation)      (None, 7, 7, 2048)   0           add_28[0][0]                     \n","__________________________________________________________________________________________________\n","res5c_branch2a (Conv2D)         (None, 7, 7, 512)    1049088     activation_86[0][0]              \n","__________________________________________________________________________________________________\n","bn5c_branch2a (BatchNormalizati (None, 7, 7, 512)    2048        res5c_branch2a[0][0]             \n","__________________________________________________________________________________________________\n","activation_87 (Activation)      (None, 7, 7, 512)    0           bn5c_branch2a[0][0]              \n","__________________________________________________________________________________________________\n","res5c_branch2b (Conv2D)         (None, 7, 7, 512)    2359808     activation_87[0][0]              \n","__________________________________________________________________________________________________\n","bn5c_branch2b (BatchNormalizati (None, 7, 7, 512)    2048        res5c_branch2b[0][0]             \n","__________________________________________________________________________________________________\n","activation_88 (Activation)      (None, 7, 7, 512)    0           bn5c_branch2b[0][0]              \n","__________________________________________________________________________________________________\n","res5c_branch2c (Conv2D)         (None, 7, 7, 2048)   1050624     activation_88[0][0]              \n","__________________________________________________________________________________________________\n","bn5c_branch2c (BatchNormalizati (None, 7, 7, 2048)   8192        res5c_branch2c[0][0]             \n","__________________________________________________________________________________________________\n","add_29 (Add)                    (None, 7, 7, 2048)   0           bn5c_branch2c[0][0]              \n","                                                                 activation_86[0][0]              \n","__________________________________________________________________________________________________\n","activation_89 (Activation)      (None, 7, 7, 2048)   0           add_29[0][0]                     \n","__________________________________________________________________________________________________\n","avg_pool (GlobalAveragePooling2 (None, 2048)         0           activation_89[0][0]              \n","__________________________________________________________________________________________________\n","fc1000 (Dense)                  (None, 1000)         2049000     avg_pool[0][0]                   \n","==================================================================================================\n","Total params: 25,636,712\n","Trainable params: 25,583,592\n","Non-trainable params: 53,120\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]}]}